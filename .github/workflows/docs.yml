name: Build documentation

on:
  push:
    branches: ["master", "chore/documentation"]
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  amalgamate-header:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup palgen
        uses: palliate/palgen@master
        with:
          run: false
          requirements: tools/requirements.txt
      
      - name: Run header amalgamation
        run: palgen --debug amalgamate

      - uses: actions/upload-artifact@master
        with:
          name: amalgamated
          path: build/amalgamated.h

  test-runtime:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

  test-compiletime:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

  benchmark-runtime:
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apk update
          apk add --no-cache git clang17 gcc 
  
  benchmark-compiletime:
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apk update
          apk add --no-cache git python3
  
  process-tests:
    needs: [test-compiletime, test-runtime]
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - name: Install dependencies
        run: |
          apk update
          apk add --no-cache git python3

  process-benchmarks:
    needs: [benchmark-compiletime, benchmark-runtime]
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - name: Install dependencies
        run: |
          apk update
          apk add --no-cache git python3

  build-docs:
    needs: [amalgamate-header, process-tests, process-benchmarks]
    runs-on: ubuntu-latest
    container: alpine:latest
    steps:
      - name: Install dependencies
        run: |
          apk update
          apk add --no-cache git doxygen graphviz font-liberation python3 py3-pydot bash py3-pip

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup palgen
        run: |
          pip3 install git+https://github.com/palliate/palgen.git@master --break-system-packages
          pip3 install -r tools/requirements.txt --break-system-packages
      
      - name: Generate docs
        run: |
          mkdir -p build/docs
          palgen --debug docs
      
      - uses: actions/upload-artifact@master
        with:
          name: docs-web
          path: build/docs/html

  deploy-pages:
    needs: build-docs
  
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      contents: read
      pages: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: docs-web
          path: html
      
      - uses: actions/download-artifact@master
        with:
          name: amalgamated
          path: html

      - name: List HTML root
        run: ls -la html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: html

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
